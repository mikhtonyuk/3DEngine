#include "SvgPathItem.h"
#include "SvgException.h"

namespace Engine
{
	namespace UI
	{
		namespace SVG
		{
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//			bool SvgPathItem::m_mapsInitialized = false;		
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			SvgPathItem::SvgPathItem(SvgCommand cmd, std::vector<SvgPoint>& points)
				:m_type(cmd)
			{
				////Init static tables
				//if(!m_mapsInitialized)
				//{
					//SvgPathItem::m_ptsCntChk[SVG_CLOSE] = 0;
					//SvgPathItem::m_ptsCntChk[SVG_MOVETO] = 1;
					//SvgPathItem::m_ptsCntChk[SVG_LINE] = 2;
					//SvgPathItem::m_ptsCntChk[SVG_QUADRATIC_BEZIER] = 3;
					//SvgPathItem::m_ptsCntChk[SVG_CUBIC_BEZIER] = 4;
				//	m_mapsInitialized = true;
				//}

				//if(points.size() != SvgPathItem::m_ptsCntChk[cmd])
				//	throw SvgException("Bad points count for specified command");

				////////////////////////////////////////////
				// TODO: Add validation of points count
				////////////////////////////////////////////

				m_points.swap(points);
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			SvgCommand SvgPathItem::Type() const
			{
				return m_type;
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			const std::vector<SvgPoint>& SvgPathItem::Coordinates() const
			{
				return m_points;
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		}
	}
}
