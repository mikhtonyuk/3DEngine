/*========================================================
* SvgObject.cpp
* @author Roman Prikhodcheko
* @date 19 March 2009
=========================================================*/
/** @defgroup UI Svg */
#include "SvgPath.h"
#include "SvgVisitor.h"

namespace Engine
{
	namespace UI
	{
		namespace SVG
		{
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			SvgPath::~SvgPath()
			{
				for (std::vector<SvgPathItem*>::iterator it = m_items.begin(); it != m_items.end(); it++)
					delete *it;
					
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			void SvgPath::AddItem(SvgPathItem* item)
			{
				m_items.push_back(item);
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			SvgObject* SvgPath::Parent() const
			{
				return m_parent;
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			void SvgPath::SetParent(SvgObject* parent)
			{
				m_parent = parent;
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			const std::vector<SvgPathItem*>& SvgPath::Items() const
			{
				return m_items;
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			void SvgPath::Accept(SvgVisitor* visitor)
			{
				visitor->Visit(this);
			}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		} // Svg
	} // UI
} // Engine

